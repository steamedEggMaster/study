영속성 컨텍스트
: 일종의 메모리 저장소이며, 엔티티 타입과 식별자를 키로 사용하는 객체의 집합을 의미
- 간단하게 생각하면 cache

엔티티 매니저는 커밋 시점에 영속성 컨텍스트에서 관리하고 있던 영속 객체의 변경 내역을 추적하여 DB에 반영
--------------------------                                  --------------
|    영속성 컨텍스트      |                                  |     DB      |
| (Persistence Context)  |        ◜---------------◝        |  ◜------◝  |
|  ◜-----------------◝  |  ←-→  |  Entity Manager  |  ←-→  |  | 레코드 |  | 
|  |     영속 객체    |   |        ◟---------------◞        |  ◟------◞  |
|  ◟-----------------◞  |                                  ---------------
--------------------------

----- 엔티티 매니저와 영속성 컨텍스트
*** 엔티티 매니저를 생성할 때 하나의 영속성 컨텍스트가 생성 ***

엔티티 매니저는 동일한 식별자를 갖는 엔티티를 2번 조회하게 되면
- 첫 번재는 쿼리 실행됨
- 두 번째는 쿼리가 아닌 영속성 컨텍스트에서 가져옴
** 엔티티매니저.close() 후 다시 엔티티매니저를 만들어서 조회 시 기존의 영속성 컨텍스트가 초기화되어 다시 쿼리 실행 **

-- 엔티티 매니저
: DB에 엑세스하기 위해 사용되는 "객체"
- 해당 객체를 통해 DB에 데이터를 조회, 등록, 수정, 삭제 작업(CRUD) 수행
import javax.persistence.EntityManager;

-- 엔티티 매니저 종류
1. 애플리케이션에서 관리하는 엔티티 매니저 : 애플리케이션에서 우리가 직접 생성하고 종료하는 엔티티 매니저
                                        - 애플리케이션을 시작하면서 EntityManagerFactory를 초기화하고 필요한 상황에서 EntityManager를 생성하여 사용
                                        - EntityManager의 사용을 마치면 close() 하여 마침
                                        - 단점 : 애플리케이션 코드에서 엔티티 매니저를 관리 -> 자원 누수에 대한 문제 발생 가능
2. 컨테이너에서 관리하는 엔티티 매니저 : JEE(Java Enterprise Edition) 컨테이너에서 관리하는 엔티티 매니저
                                    - JEE 컨테이너에서 EntityManagerFactory와 EntityManager의 라이프 사이클을 관리
                                    - 애플리케이션 코드에서는 컨테이너가 제공하는 EntityManager를 사용하면 됨
                                    - 이 경우 @PersistenceContext 를 사용하여 구현
                                    - 요새 사용 X
