----- 애니메이션 속성으로 전환 효과 제어하기

키 프레임(@keyframes)를 정의해서 실행해야함.

@keyframes 키프레임명 {
  0% | from { css 코드 }   - 시작지점 -- 시간에 대한 %
  n%( css 코드 }
  100% | to { css 코드 } - 종료지점
} 

-- 정의 후 사용할 요소에서 애니메이션 속성으로 적용
1. animation-name: 키프레임명;
2. animation-duration: Ns|Nms;
*** "키프레임 정의, 1,2번 3가지"가 모두 있어야 애니메이션 적용됨 ***

3. animation-delay: Ns|Nms;
4. animation-fill-mode : 애니메이션 실행 전 후 스타일 지정
                       - animation-fill-mode: none | forwards | backwards | both;
                                            - none : 실행 전 = 시작지점의 스타일을 적용하지 않고 대기
                                                     실행 후 = 실행되기 전의 스타일 적용 상태로 돌아감
                                            - forwards : 실행 전 = 시작지점의 스타일을 적용하지 않고 대기      *제일 많이 사용
                                                         실행 후 = 종료지점의 스타일을 적용하고 대기
                                            - backwards : 실행 전 = 시작지점의 스타일을 적용하고 대기
                                                          실행 후 = 실행되기 전의 스타일 적용 상태로 돌아감
                                            - both : 실행 전 = 시작지점의 스타일을 적용하고 대기
                                                     실행 후 = 종료지점의 스타일을 적용하고 대기
5. animation-iterator-count : 실행 횟수 조절
                            - animation-iterator-count: 정수 | infinite;
6. animation-play-state : 애니메이션의 재생 상태 지정
                        - animation-play-state: paused | running;
                                               (실행중지)  (실행)
7. animation-direction : 애니메이션의 진행 방향 지정
                       - animation-direction: normal | reverse | alternate | alternate-reverse;
                                            - normal : from -> to
                                            - reverse : to -> from
                                            - alternate : 1회 이상 실행 시 홀수-normal / 짝수-reverse
                                            - alternate-reverse : 1회 이상 실행 시 홀수-reverse / 짝수-normal
8. animation-timing-function : 애니메이션의 속도 지정
                              (== transition-timing-function)
9. animation : 단축 속성
             - animation : 키프레임명 진행시간 속도 지연시간 횟수 방향 필모드 재생상태;
                         - 일부만 적어도 됨

----- 변형 효과 적용하기 ------------------------------------------------------------------------------
변형 효과 : 크기 변경 or 위치 변경 or 회전 등 요소 자체를 변하게 하는 것
         - 2D 및 3D 가능
         - 배우는건 2D 만. 3D는 찾아보기

1. transform : 요소에 특정 변형 효과 지정
             - position 속성과 많이 사용됨. why? position 속성 적용 시 기준점은 왼쪽 위 꼭짓점이기 때문
             - transform: 함수;
                        - 함수종류 1. translate(x, y)   : 현재 위치에서 x, y 만큼 이동
                                  2. translateX(n)     : 현재 위치에서 x축 n 만큼 이동
                                  3. translateY(n)     : 현재 위치에서 y축 n 만큼 이동
                                  ====== 단위 : px, 위로 이동은 "음수" ===============
                                  4. scale(x, y)       : 요소를 x, y 만큼 확대 or 축소
                                  5. scaleX(n)         : 요소를 n 만큼 x축으로 확대 or 축소
                                  6. scaleY(n)         : 요소를 n 만큼 y축으로 확대 or 축소
                                  ====== 단위 : 소수점~정수(n배) =================================
                                  7. skew(xdeg, ydeg)  : 요소를 x축과 y축으로 xdeg, ydeg 만큼 기울임
                                  8. skewX(deg)        : 요소를 deg 만큼 x 축을 기준으로 기울임
                                  9. skewY(deg)        : 요소를 deg 만큼 y 축을 기준으로 기울임
                                  10. rotate(deg)      : 요소를 deg 만큼 회전
                                  ====== 단위 : 0~180인듯, 단위 뒤에 deg 붙이기, 디폴트 기준은 중앙=====

1. transform-origin : 변형 시 요소의 기준점을 변경
                    - transform-origin: N% M%;
                    - transform-origin: left|center|right top|center|bottom;
                                      - x축위치 y축위치 임.


